<project name="gftprototype-build" basedir="." default="build">
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="lib/antlibs/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>
	<taskdef name="latex"    classname="de.dokutransdata.antlatex.LaTeX" 
	classpath="lib/antlibs/ant_latex_0.0.9_1.jar"/>
	
	<property name="webapp.dir"			value="/var/www/gft" />
	<property name="result.dir"			value="test-results" />
	<property name="result.js.file"		value="JavaScript.xml" />
	<property name="test.dir"			value="test/php" />
	<property name="test.url"           value="http://phantomjs.rdmr.ch/gftprototype.php?type=junit-xml" />
	<property name="js.dir"				value="js" />
	<property name="css.dir"			value="resources/styles" />
	<property name="docu.path"			value="${basedir}/_DOCUMENTATION/02_Documentation" />
	<property name="docu.file"			value="GFTPrototype.tex" />
	<property name="docu.glossary"		value="GFTPrototype.glo" />
	<property name="docu.revisionfile"	value="head/aenderungsverlauf.tex" />
	
	<tstamp>
		<format property="TODAY" pattern="dd.MM.yyyy HH:mm:ss" />
	</tstamp>
	
	<target name="build" depends="test,documentation,generate_css,deploy,test-js">
		<echo message="BUILD FINISHED!"/>
	</target>
	
	<target name="test">
		<delete dir="test-results"/>
		<echo message="Running tests"/>
		<mkdir dir="${result.dir}"/>
		<foreach target="exec_test_php" param="filename">
			<path>
				<fileset dir="${test.dir}" includes="**/Test*.php"/>
			</path>
		</foreach>
	</target>
	
	<target name="documentation">
		<if>
			<equals arg1="${include_documentation}" arg2="false" />
			<then>
				<echo message="Omit documentation for this build." />
			</then>
			<else>
				<antcall target="docu_revision" />
				<echo message="Generate documentation in 2 latex runs"/>
				<echo message="First latex run:"/>
				<antcall target="exec_latex">
					<param name="clean"   value="off"/>
					<param name="verbose" value="off"/>
					<param name="pdftex"  value="off"/>
				</antcall>

				<echo message="Generate glossary:"/>
				<exec executable="makeglossaries" dir="${docu.path}" logError="true">
					<arg value="${docu.glossary}"/>
				</exec>

				<echo message="2nd latex run (re-use generated files from first run):"/>
				<antcall target="exec_latex">
					<param name="clean"   value="on"/>
					<param name="verbose" value="on"/>
					<param name="pdftex"  value="on"/>
				</antcall>
			</else> 
		</if>
	</target>
	
	<target name="generate_css">
		<echo message="Compile sass files to css"/>
		<foreach target="compile_sass" param="dir">
			<path>
				<dirset dir="${basedir}">
					<include name="**/styles"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="deploy" depends="clean,patch">
		<echo message="Deploying application"/>
		<copy todir="${webapp.dir}" overwrite="${force_overwrite}">
			<fileset dir="."/>
		</copy>
	</target>
	
	<target name="test-js" depends="deploy">
		<echo message="###############################################################"/>
		<echo message="# Check JavaScript Unit-Tests: http://gft.rdmr.ch/test/js     #"/>
		<echo message="###############################################################"/>
		<get src="${test.url}" dest="${result.dir}/${result.js.file}"/>
	</target>
	
	<target name="exec_test_php">
		<basename file="${filename}" property="basename"/>
		<echo message="Run ${basename}"/>
		<exec executable="php" dir="${test.dir}" output="${result.dir}/${basename}.xml" logError="true">
			<arg value="-f"/>
			<arg value="index.php"/>
			<arg value="${filename}" />
		</exec>
	</target>
	
	<target name="exec_latex">
		<latex  
			latexfile="${docu.path}/${docu.file}"
			verbose="${verbose}"  
			clean="${clean}"  
			pdftex="{pdftex}"  
			workingDir="${docu.path}"  
			/>  
	</target>
	
	<target name="docu_revision">
		<echo message="Generate documentation revision history"/>
		<chmod file="${basedir}/directory_revision.sh" perm="ugo+rx"/>
		<exec executable="bash" outputproperty="docu.revisions">
			<arg value="-c" />
			<arg line='"${basedir}/directory_revision.sh ${docu.path}"'/>
		</exec>
		
		<replace value="${docu.revisions}" token="% revisions from git" file="${docu.path}/${docu.revisionfile}" summary="true" />
	</target>
	
	<target name="compile_sass">
		<echo message="Compile sass files in ${dir}"/>
		<apply executable="sass" dest="${dir}" verbose="true" force="true" failonerror="true">
			<arg value="--unix-newlines" />
			<srcfile />
			<targetfile />
			<fileset dir="${dir}" includes="**/*.scss" />
			<mapper type="glob" from="*.scss" to="*.css"/>
		</apply>
	</target>
	
	<target name="clean">
		<if>
			<equals arg1="${force_overwrite}" arg2="true" />
			<then>
				<echo message="Clean previously deployed files"/>
				<delete includeemptydirs="true">
					<fileset dir="${webapp.dir}" includes="**/*" followsymlinks="false" />
				</delete>
			</then>
			<else>
				<echo message="Omit clean for this build. Use force_overwrite=true to clean deployed files." />
			</else>
		</if>
	</target>
	
	<target name="patch"> 
		<replace token="-debug" value=""  file="usecases/worlddata/index.html" summary="true" />
		<replace token="-debug" value=""  file="usecases/fixmystreet/index.html" summary="true" />
		<replace token="logEnabled: true" value="logEnabled: false"  file="usecases/fixmystreet/app/util/Config.js" summary="true" />
		
		<replace token="http://localhost/gft" value="http://gft.rdmr.ch"  file="test/js/helper.js" summary="true" />
	</target>
</project>
